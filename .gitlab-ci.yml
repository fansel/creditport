---
variables:
  CI_REGISTRY_IMAGE: docker.io/swtp202313/creditport
stages:
  - test
  - build
  - deploy
test_frontend:
  stage: test
  image: public.ecr.aws/docker/library/node:lts-alpine
  script:
    - cd frontend
    - npm install
    - npm run test
test_backend:
  stage: test
  script:
    - echo "Das ist der Backend Test"
build_frontend:
  needs:
    - test_frontend
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:v1.14.0-debug
    entrypoint:
      - ''
  script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"auth\":\"$(echo -n
      $CI_REGISTRY_USER:$CI_REGISTRY_PASSWORD | base64)\"}}}" >
      /kaniko/.docker/config.json
    - /kaniko/executor --context "frontend" --dockerfile
      "${CI_PROJECT_DIR}/frontend/Dockerfile" --destination
      "${CI_REGISTRY_IMAGE}:frontend-${CI_COMMIT_TAG}"
  rules:
    - if: $CI_COMMIT_TAG
  only:
    - ci-pipline
deploy:
  stage: deploy
  needs:
    - build_frontend
  when: manual
  image: public.ecr.aws/docker/library/nginx:alpine
  variables:
    DOCKER_HOST: ssh://$DEPLOY_USER@$DEPLOY_SERVER
  before_script:
    - apk update
    - apk add openssh docker docker-compose
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh && chmod 700 ~/.ssh
    - echo "$SSH_KOWN_HOSTS" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - docker compose -f docker-compose-prod.yml down
    - docker compose -f docker-compose-prod.yml up -d
# deploy_frontend:
#   stage: deploy
#   variables:
#     DOCKER_HOST: "ssh://$DEPLOY_USER@$DEPLOY_SERVER"
#   before_script:
#     - apk update
#     - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
#     - chmod 400 $SSH_KEY
#   script:
#     - ssh -o StrictHostKeyChecking=no -i $SSH_KEY root@$DEPLOY_SERVER "
#         cd /opt/creditport &&
#         docker compose down &&
#         docker compose pull &&
#         docker compose up -d"
#   only:
#     - main

# build_backend_image:
#   stage: build
#   image: docker:20.10.16
#   services:
#     - docker:20.10.16-dind
#   tags:
#     - vm
#   before_script:
#     - docker login -u $REGISTRY_USER -p $REGISTRY_PASS
#   script:
#     - cd creditport-backend
#     - echo 'DB_NAME=${DB_NAME}\nDB_PASSWORD=${DB_PASSWORD}\nDB_USERNAME=${DB_USERNAME}\nDB_HOST=${DB_HOST}\n' > .env
#     - cat .env
#     - gradle build
#     - docker build -t $IMAGE_NAME:$IMAGE_TAG .
#     - docker push $IMAGE_NAME:$IMAGE_TAG
#   only:
#     - main
#     - developer

# deploy:
#   stage: deploy
#   before_script:
#     - chmod 400 $SSH_KEY
#   script:
#     - ssh -o StrictHostKeyChecking=no -i $SSH_KEY root@161.35.223.117 "
#         docker login -u $REGISTRY_USER -p $REGISTRY_PASS &&
#         docker ps -aq | xargs docker stop | xargs docker rm &&
#         docker run -d -p 5000:5000 $IMAGE_NAME:$IMAGE_TAG"
